1. How is Python an interpretive language?
An interpreted language means that when executing a program you read the source file one line at a time and do what it says.
Python source code is compiled into bytecode implicitly and this code is executed by a virtual machine. You don't have to run a
compiler, you just have to run the python file. It compiles files as needed. Another feature of Python that is interepretive in
nature is its interactive prompt. After typing in Python statements they can be executed immediately, something that compiled
languages don't do. The implicit compilated and interactive prompt make Python an interpretive language.

Source: https://nedbatchelder.com/blog/201803/is_python_interpreted_or_compiled_yes.html

2. What is the difference between Python Arrays, lists, tuples, and records? Explain it with examples.
Arrays-   Sequence of data types that can store a collection of items that functions can be performed on.
Lists-    MUTABLE** sequence of data types that can store a collection of items. The elements of lists can be any data type.
Tuples-   IMMUTABLE* sequence of data types that can store a collection of items. Similar to a record but the elements are not
          named.
Records-  An aggregate of data elements in which the individual elements are identified by names and accessed through offsets
          from the beginning of the structure. 

*Immutable: A Python object of this type CANNOT be modified after initialization
**Mutable: A Python object of this type CAN be modified after initialization

Source: https://www.afternerd.com/blog/difference-between-list-tuple/
        https://www.pythoncentral.io/the-difference-between-a-list-and-an-array/
        https://elearning.utdallas.edu/bbcswebdav/pid-2755059-dt-content-rid-71969160_1/courses/2198-merged-CE4337001-
        CS4337001/CS%204337-%20Ch%206-%20Part3.pdf
      
3. What does [::-1] do? Explain it with an example.
[::-1] is an extended slice that returns the reverse order of a list in Python.

For example, if list = range(5) then list[::-1] returns [4, 3, 2, 1]. 

Sources: https://docs.python.org/2.3/whatsnew/section-slices.html

4. How can you randomize the items of a list in place in Python?
from random import shuffle
Then use the shuffle() function on the list.

For example,
list = range(5) // [0, 1, 2, 3, 4]
shuffle(list)

new value of list = [4, 2, 0, 1, 3]

Sources: https://stackoverflow.com/questions/34862378/randomizing-a-list-in-python/34862409

5. What is the difference between range & xrange?Explain it with an example

Sources: https://www.pythoncentral.io/how-to-use-pythons-xrange-and-range/
6. What advantages do NumPy arrays offer over (nested) Python lists?
7. How to add values to a python array? Explain it with an example
8. What is split used for? Explain it with an example
